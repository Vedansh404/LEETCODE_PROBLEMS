class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size(); // no of rows
        int n=grid[0].size(); // no of columns
       
        int dp[m][n]; // dp table

        dp[0][0]=grid[0][0]; 
        
        // Initializing left and right edges.

        for(int i=1;i<n;++i){
            dp[0][i]=dp[0][i-1] + grid[0][i];  
        }
        for(int i=1;i<m;++i){
            dp[i][0]=dp[i-1][0] + grid[i][0];
        }

        // calculating the minimum weight using Dynamic Programming.
        for(int i=1;i<m;++i){
            for(int j=1;j<n;++j){
                dp[i][j]=grid[i][j]+min(dp[i-1][j],dp[i][j-1]);
            }
        }
        // returning the last index.
        return dp[m-1][n-1];
    }
};
